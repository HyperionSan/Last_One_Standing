[db-sing-nv]

# This machine description file is used internally by simfactory as a template
# during the sim setup and sim setup-silent commands
# Edit at your own risk
# Machine description
nickname        = db-sing-nv
name            = db-sing-nv
location        = LSU
description     = For CarpetX, Using LSU's Deep Bayou Cluster + Singularity + CUDA
status          = production

# Access to this machine
# You can only get here using --machine=db-sing-nv
hostname        = db-sing-nv
aliaspattern    = ^db-sing-nv

# the configure scripts strip /usr/local from XXX_DIR to avoid chosing system
# libraries, however not all compilers will search in there by default Here we
# explicitly add the filtered out locations so that they appear last in the
# search path removed by strip-libdirs.sh
# removed by strip-incdirs.sh
envsetup = <<EOF
export LD_LIBRARY_PATH=/usr/lib64:/usr/local/cuda-11.0/compat
EOF
#module purge
#module load mvapich2
#module load gcc/9.3.0
#EOF


# Source tree management
sourcebasedir = /project/sbrandt/carpetx/@USER@

# This is the location of the file inside the singularity image
optionlist      = db-sing-nv.cfg
submitscript    = db-sing-nv.sub
runscript       = db-sing-nv.run

# (1) Deep Bayou only has singularity on the compute nodes, so srun is needed here.
# (2) Can't specify -A @ALLOCATION@ here, so we're counting on
#     there being a default allocation for this to work
# (3) Deep bayou requires we ask for 48 cores per node
make            = srun -u -A @ALLOCATION@ -p checkpt -N 1 --cpus-per-task 48 --ntasks-per-node 1 singularity exec --nv --bind /var/spool --bind /ddnA --bind /project --bind /etc/ssh/ssh_known_hosts --bind /work --bind /scratch /work/sbrandt/images/etworkshop.simg make -j@MAKEJOBS@

basedir = /project/sbrandt/carpetx/@USER@/simulations
ppn             = 48
max-num-threads = 48
num-threads     = 48
memory          = 196608
nodes           = 7
# Grab stderr so we can see submit problems in the log
submit          = sbatch @SCRIPTFILE@ 2>&1
getstatus       = squeue -j @JOB_ID@

# need to kill the whole set of processes descending from @JOB_ID@, not just the
# (simfactory) top-level process
stop            = scancel @JOB_ID@
submitpattern   = 'Submitted batch job (\d+)'
statuspattern   = '@JOB_ID@ '
queuedpattern   = ' PD '
queue           = checkpt
runningpattern  = ' (CF|CG|R|TO) '
holdingpattern  = '\(JobHeldUser\)'
exechost        = hostname -s
exechostpattern = \S+
stdout          = cat @SIMULATION_NAME@.out
stderr          = cat @SIMULATION_NAME@.err
stdout-follow   = tail -n 100 -f @SIMULATION_NAME@.out @SIMULATION_NAME@.err
 maxwalltime     = 72:00:00
